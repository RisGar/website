---
import Footer from "../components/Footer.astro"
import { metadata } from "../defaults"

import "../styles/global.scss"

import "@fontsource/dm-serif-display"
import "@fontsource/lato"

import SpeedInsights from "@vercel/speed-insights/astro"

import { ViewTransitions } from "astro:transitions"

const defaultTitle = metadata.title
const defaultDesc = metadata.description

interface Props {
  title?: string
  description?: string
}

const { title = defaultTitle, description = defaultDesc } = Astro.props as Props
---

<!doctype html>
<html lang="en">
  <head>
    <!--Metadata -->
    <meta charset="UTF-8" />

    <title>{title}</title>
    <meta property="og:title" content={title} />
    <meta property="og:type" content="website" />
    <meta property="og:site_name" content="Website| Rishab Garg" />
    <meta property="og:image" content="summary_large_image.png" />
    <meta property="og:description" name="description" content={description} />
    <meta property="og:url" content="https://rishab-garg.me/" />

    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:creator" content="@rishab_garg" />
    <meta name="twitter:site" content="@rishab_garg" />
    <meta name="twitter:image" content="summary_large_image.png" />

    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <link rel="icon" href="/favicon.ico" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />

    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#da532c" />

    <meta name="msapplication-TileColor" content="#da532c" />
    <meta name="theme-color" content="#282c34" />

    <meta content="#da532c" data-react-helmet="true" name="theme-color" />

    <SpeedInsights />

    <ViewTransitions />

    <script>
      const blob = document.getElementById("blob")!

      window.onpointermove = (event) => {
        const { clientX, clientY } = event

        blob.animate(
          {
            left: `${clientX}px`,
            top: `${clientY}px`,
          },
          { duration: 500, fill: "forwards" }
        )
      }
    </script>
  </head>

  <body class="h-full m-0 overflow-hidden
  text-neutral-900 bg-neutral-100">
    <div
      id="blob"
      class="bg-black h-[6vmax] aspect-square
      absolute left-1/2 top-1/2 transform -translate-x-1/2 -translate-y-1/2
      rounded-full
      bg-gradient-to-r from-cyan to-purple-500 opacity-80
      -z-20"
    >
    </div>
    <div class="h-full w-full absolute backdrop-blur-[3vmax] -z-10"></div>

    <div class="lg:max-w-[50vw] max-w-[70vw] mx-auto">
      <slot />
    </div>
    <footer>
      <Footer />
    </footer>
  </body>
</html>
